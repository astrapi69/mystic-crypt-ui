/*
 * Copyright 2017 Alpha Ro Group UG (haftungsbeschr√§ngt).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.alpharogroup.mystic.crypt.panels.keygen;

/**
 *
 * @author astrapi69
 */
public class EnDecryptFormPanel extends javax.swing.JPanel {

    /**
     * Creates new form EnDecryptFormPanel
     */
    public EnDecryptFormPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblToEncrypt = new javax.swing.JLabel();
        lblEncrypted = new javax.swing.JLabel();
        scpToEncrypt = new javax.swing.JScrollPane();
        txtToEncrypt = new javax.swing.JTextArea();
        scpEncrypted = new javax.swing.JScrollPane();
        txtEncrypted = new javax.swing.JTextArea();
        btnDecrypt = new javax.swing.JButton();
        btnEncrypt = new javax.swing.JButton();

        lblToEncrypt.setText("Text to encrypt");

        lblEncrypted.setText("Encrypted text");

        txtToEncrypt.setColumns(20);
        txtToEncrypt.setRows(5);
        scpToEncrypt.setViewportView(txtToEncrypt);

        txtEncrypted.setColumns(20);
        txtEncrypted.setRows(5);
        scpEncrypted.setViewportView(txtEncrypted);

        btnDecrypt.setText("< Decrypt");

        btnEncrypt.setText("Encrypt >");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblToEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scpToEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scpEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblToEncrypt)
                    .addComponent(lblEncrypted))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEncrypt)
                        .addGap(102, 102, 102)
                        .addComponent(btnDecrypt))
                    .addComponent(scpEncrypted, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scpToEncrypt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JLabel lblEncrypted;
    private javax.swing.JLabel lblToEncrypt;
    private javax.swing.JScrollPane scpEncrypted;
    private javax.swing.JScrollPane scpToEncrypt;
    private javax.swing.JTextArea txtEncrypted;
    private javax.swing.JTextArea txtToEncrypt;
    // End of variables declaration//GEN-END:variables
}
