/**
 * The MIT License
 *
 * Copyright (C) 2015 Asterios Raptis
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
/*
 * To change this license header, choose License Headers in Project Properties. To change this
 * template file, choose Tools | Templates and open the template in the editor.
 */
package io.github.astrapi69.mystic.crypt.panels.keygen;

/**
 *
 * @author astrapi69
 */
public class EnDecryptFormPanel extends javax.swing.JFrame
{

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnDecrypt;
	private javax.swing.JButton btnEncrypt;
	private javax.swing.JLabel lblEncrypted;
	private javax.swing.JLabel lblToEncrypt;
	private javax.swing.JScrollPane scpEncrypted;
	private javax.swing.JScrollPane scpToEncrypt;
	private javax.swing.JTextArea txtEncrypted;
	private javax.swing.JTextArea txtToEncrypt;
	/**
	 * Creates new form EnDecryptPanel
	 */
	public EnDecryptFormPanel()
	{
		initComponents();
	}

	// End of variables declaration//GEN-END:variables

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[])
	{
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and
		 * feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try
		{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
				.getInstalledLookAndFeels())
			{
				if ("Nimbus".equals(info.getName()))
				{
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex)
		{
			java.util.logging.Logger.getLogger(EnDecryptFormPanel.class.getName())
				.log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex)
		{
			java.util.logging.Logger.getLogger(EnDecryptFormPanel.class.getName())
				.log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex)
		{
			java.util.logging.Logger.getLogger(EnDecryptFormPanel.class.getName())
				.log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(EnDecryptFormPanel.class.getName())
				.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			@Override
			public void run()
			{
				new EnDecryptFormPanel().setVisible(true);
			}
		});
	}

	private void btnDecryptActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_btnDecryptActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btnDecryptActionPerformed

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		lblToEncrypt = new javax.swing.JLabel();
		scpToEncrypt = new javax.swing.JScrollPane();
		txtToEncrypt = new javax.swing.JTextArea();
		btnEncrypt = new javax.swing.JButton();
		btnDecrypt = new javax.swing.JButton();
		scpEncrypted = new javax.swing.JScrollPane();
		txtEncrypted = new javax.swing.JTextArea();
		lblEncrypted = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		lblToEncrypt.setText("Text to encrypt");

		txtToEncrypt.setColumns(20);
		txtToEncrypt.setRows(5);
		scpToEncrypt.setViewportView(txtToEncrypt);

		btnEncrypt.setText("Encrypt >");

		btnDecrypt.setText("< Decrypt");
		btnDecrypt.addActionListener(new java.awt.event.ActionListener()
		{
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				btnDecryptActionPerformed(evt);
			}
		});

		txtEncrypted.setColumns(20);
		txtEncrypted.setRows(5);
		scpEncrypted.setViewportView(txtEncrypted);

		lblEncrypted.setText("Text is encrypted");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(lblToEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 381,
							javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(scpToEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 500,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(39, 39, 39)
					.addGroup(
						layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
							.addComponent(btnDecrypt, javax.swing.GroupLayout.DEFAULT_SIZE, 167,
								Short.MAX_VALUE)
							.addComponent(btnEncrypt, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36,
						Short.MAX_VALUE)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(scpEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 500,
							javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(lblEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 381,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(26, 26, 26)));
		layout.setVerticalGroup(layout
			.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup().addGap(31, 31, 31)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(lblToEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addComponent(lblEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
						javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(
					layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addGroup(layout.createSequentialGroup().addComponent(btnEncrypt)
							.addGap(90, 90, 90).addComponent(btnDecrypt))
						.addComponent(scpEncrypted).addComponent(scpToEncrypt))
				.addContainerGap(40, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents
}
