/**
 * The MIT License
 *
 * Copyright (C) 2015 Asterios Raptis
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package io.github.astrapi69.mystic.crypt.panel.certificate;

/**
 *
 * @author astrapi69
 */
public class CertificateFormPanel extends javax.swing.JPanel
{

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JComboBox<String> cmbFingerprintAlgorithm;

	private javax.swing.JLabel lblFingerprint;

	private javax.swing.JLabel lblIssuedBy;


	private javax.swing.JLabel lblIssuedTo;
	private javax.swing.JLabel lblPublicKey;
	private javax.swing.JLabel lblSerialNumber;
	private javax.swing.JLabel lblSignatureAlgorithm;
	private javax.swing.JLabel lblValidFrom;
	private javax.swing.JLabel lblValidUntil;
	private javax.swing.JLabel lblVersion;
	private javax.swing.JScrollPane scrPublicKey;
	private javax.swing.JTextField txtFingerprint;
	private javax.swing.JTextField txtIssuedBy;
	private javax.swing.JTextField txtIssuedTo;
	private javax.swing.JTextArea txtPublicKey;
	private javax.swing.JTextField txtSerialNumber;
	private javax.swing.JTextField txtSignatureAlgorithm;
	private javax.swing.JTextField txtValidFrom;
	private javax.swing.JTextField txtValidUntil;
	private javax.swing.JTextField txtVersion;

	// End of variables declaration//GEN-END:variables
	/**
	 * Creates new form CertificateFormPanel
	 */
	public CertificateFormPanel()
	{
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		lblIssuedTo = new javax.swing.JLabel();
		txtIssuedTo = new javax.swing.JTextField();
		lblIssuedBy = new javax.swing.JLabel();
		txtIssuedBy = new javax.swing.JTextField();
		lblVersion = new javax.swing.JLabel();
		txtVersion = new javax.swing.JTextField();
		lblSerialNumber = new javax.swing.JLabel();
		txtSerialNumber = new javax.swing.JTextField();
		lblValidFrom = new javax.swing.JLabel();
		txtValidUntil = new javax.swing.JTextField();
		txtValidFrom = new javax.swing.JTextField();
		lblValidUntil = new javax.swing.JLabel();
		lblSignatureAlgorithm = new javax.swing.JLabel();
		txtFingerprint = new javax.swing.JTextField();
		lblFingerprint = new javax.swing.JLabel();
		txtSignatureAlgorithm = new javax.swing.JTextField();
		cmbFingerprintAlgorithm = new javax.swing.JComboBox<>();
		lblPublicKey = new javax.swing.JLabel();
		scrPublicKey = new javax.swing.JScrollPane();
		txtPublicKey = new javax.swing.JTextArea();

		lblIssuedTo.setText("Issued to");

		txtIssuedTo.setToolTipText("");
		txtIssuedTo.addActionListener(new java.awt.event.ActionListener()
		{
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				txtIssuedToActionPerformed(evt);
			}
		});

		lblIssuedBy.setText("Issued by");

		txtIssuedBy.setToolTipText("");

		lblVersion.setText("Version");

		lblSerialNumber.setText("Serial number");

		lblValidFrom.setText("Valid from");

		lblValidUntil.setText("Valid until");

		lblSignatureAlgorithm.setText("Signature algorithm");

		lblFingerprint.setText("Fingerprint");

		cmbFingerprintAlgorithm.setModel(new javax.swing.DefaultComboBoxModel<>(
			new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		lblPublicKey.setText("Public key");

		txtPublicKey.setColumns(20);
		txtPublicKey.setRows(5);
		scrPublicKey.setViewportView(txtPublicKey);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout
			.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGroup(layout.createSequentialGroup().addGap(63, 63, 63).addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(lblPublicKey, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(lblFingerprint, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(lblSignatureAlgorithm, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(lblValidFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 140,
							Short.MAX_VALUE)
						.addComponent(lblSerialNumber, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(lblVersion, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(lblIssuedBy, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(lblIssuedTo, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(
							lblValidUntil, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGap(47, 47, 47)
						.addGroup(layout
							.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
							.addComponent(txtIssuedTo)
							.addComponent(txtIssuedBy, javax.swing.GroupLayout.DEFAULT_SIZE, 480,
								Short.MAX_VALUE)
							.addComponent(txtVersion, javax.swing.GroupLayout.DEFAULT_SIZE, 480,
								Short.MAX_VALUE)
							.addComponent(txtSerialNumber).addComponent(txtValidUntil)
							.addComponent(txtValidFrom).addComponent(txtSignatureAlgorithm)
							.addGroup(layout.createSequentialGroup()
								.addComponent(txtFingerprint,
									javax.swing.GroupLayout.PREFERRED_SIZE, 309,
									javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18).addComponent(cmbFingerprintAlgorithm, 0,
									javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
							.addComponent(scrPublicKey))
						.addContainerGap(82, Short.MAX_VALUE)));
		layout
			.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(38, 38, 38)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(lblIssuedTo).addComponent(txtIssuedTo,
							javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(18, 18, 18)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(lblIssuedBy).addComponent(txtIssuedBy,
							javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(18, 18, 18)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(lblVersion).addComponent(txtVersion,
							javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(18, 18, 18)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(lblSerialNumber).addComponent(txtSerialNumber,
							javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(17, 17, 17)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addComponent(lblValidFrom).addComponent(txtValidFrom,
							javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(18, 18, 18)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(txtValidUntil, javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(lblValidUntil))
					.addGap(18, 18, 18)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(lblSignatureAlgorithm).addComponent(txtSignatureAlgorithm,
							javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(18, 18, 18)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(lblFingerprint)
						.addComponent(txtFingerprint, javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(cmbFingerprintAlgorithm,
							javax.swing.GroupLayout.PREFERRED_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGap(18, 18, 18)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(lblPublicKey).addComponent(scrPublicKey,
							javax.swing.GroupLayout.PREFERRED_SIZE, 280,
							javax.swing.GroupLayout.PREFERRED_SIZE))
					.addContainerGap(56, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	private void txtIssuedToActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_txtIssuedToActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtIssuedToActionPerformed
}
